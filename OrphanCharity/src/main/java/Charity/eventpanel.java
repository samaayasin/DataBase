package Charity;

import java.awt.Color;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author USER
 */


public class eventpanel extends javax.swing.JPanel {  
    
    Vector <String> s=new Vector<>();
 Loginpage l=new Loginpage();
  int empssn= l.idm();
        String Empssn=String.valueOf(empssn);
 
    public eventpanel() {
     
         initComponents();
         this.setSize(1330, 930);
    
       
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        evtime = new javax.swing.JTextField();
        evcity = new javax.swing.JTextField();
        eventidtxt = new javax.swing.JTextField();
        street = new javax.swing.JTextField();
        Bud = new javax.swing.JTextField();
        evname = new javax.swing.JTextField();
        evdate = new datechooser.beans.DateChooserCombo();
        ADD = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        pic_event = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        ShowAll = new javax.swing.JButton();
        searchtxt = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        show_vol = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        volunteertxt = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1330, 930));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setAutoCreateRowSorter(true);
        table.setBackground(new java.awt.Color(70, 205, 235));
        table.setFont(new java.awt.Font("Malgun Gothic Semilight", 1, 18)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event ID", "Event Name", "Event Time", "Budget", "Maneger ID", "Street", "City", "Date"
            }
        ));
        table.setRowHeight(30);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMinWidth(50);
            table.getColumnModel().getColumn(0).setPreferredWidth(50);
            table.getColumnModel().getColumn(1).setPreferredWidth(50);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, 1340, 360));

        jLabel1.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        jLabel1.setText("Event Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 90, 30));

        jLabel2.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        jLabel2.setText("City");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 80, 30));

        jLabel3.setBackground(new java.awt.Color(153, 255, 255));
        jLabel3.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        jLabel3.setText("Event ID");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 80, 30));

        jLabel5.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        jLabel5.setText("Street");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 80, 30));

        jLabel7.setBackground(new java.awt.Color(0, 153, 153));
        jLabel7.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        jLabel7.setText("Event Time");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 80, 30));

        jLabel8.setBackground(new java.awt.Color(0, 153, 153));
        jLabel8.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        jLabel8.setText("Budget");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 80, 30));

        evtime.setForeground(new java.awt.Color(153, 153, 153));
        add(evtime, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 180, 30));

        evcity.setForeground(new java.awt.Color(153, 153, 153));
        add(evcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 180, 30));

        eventidtxt.setEditable(false);
        eventidtxt.setForeground(new java.awt.Color(153, 153, 153));
        add(eventidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 180, 30));

        street.setForeground(new java.awt.Color(153, 153, 153));
        add(street, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 180, 30));
        add(Bud, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 180, 30));

        evname.setForeground(new java.awt.Color(153, 153, 153));
        add(evname, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 180, 30));

        evdate.setCurrentView(new datechooser.view.appearance.AppearancesList("n",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true),
            new datechooser.view.appearance.ViewAppearance("n",
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 255, 255),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 153),
                    0.4f),
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(153, 153, 255),
                    new java.awt.Color(255, 255, 0),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.BOLD, 14),
                    new java.awt.Color(0, 0, 102),
                    0.2f),
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(0, 0, 0),
                    new java.awt.Color(51, 255, 51),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 153),
                    0.5f),
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(204, 204, 204),
                    new java.awt.Color(0, 0, 102),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.ITALIC, 10),
                    new java.awt.Color(0, 0, 255),
                    0.4f),
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 255, 255),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.BOLD, 12),
                    new java.awt.Color(0, 0, 255),
                    0.4f),
                new datechooser.view.appearance.custom.CustomCellAppearance(new java.awt.Color(255, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    (javax.swing.border.Border)null,
                    new java.awt.Font("Serif", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(255, 0, 0),
                    0.3f),
                new datechooser.view.BackRenderer( 1,
                    "/C:/Users/TestEnv/Documents/NetBeansProjects/OrphanCharity/OrphanCharity/ALLPIC/e1.jpeg"),
                true,
                true)));
    evdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED,
        (java.awt.Color)null,
        (java.awt.Color)null,
        new java.awt.Color(255, 255, 255),
        new java.awt.Color(255, 255, 255)));
try {
    evdate.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(2022, 11, 12),
        new java.util.GregorianCalendar(2022, 11, 12))));
} catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
e1.printStackTrace();
}
add(evdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 180, 30));

ADD.setBackground(new java.awt.Color(70, 205, 235));
ADD.setFont(new java.awt.Font("Malgun Gothic Semilight", 1, 18)); // NOI18N
ADD.setForeground(new java.awt.Color(255, 255, 255));
ADD.setText("ADD");
ADD.setFocusable(false);
ADD.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseEntered(java.awt.event.MouseEvent evt) {
        ADDMouseEntered(evt);
    }
    public void mouseExited(java.awt.event.MouseEvent evt) {
        ADDMouseExited(evt);
    }
    });
    ADD.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ADDActionPerformed(evt);
        }
    });
    add(ADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, 120, 60));

    update.setBackground(new java.awt.Color(70, 205, 235));
    update.setFont(new java.awt.Font("Malgun Gothic Semilight", 1, 18)); // NOI18N
    update.setForeground(new java.awt.Color(255, 255, 255));
    update.setText("Update");
    update.setFocusable(false);
    update.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            updateMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            updateMouseExited(evt);
        }
    });
    update.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            updateActionPerformed(evt);
        }
    });
    add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 350, 120, 60));

    jComboBox1.setBackground(new java.awt.Color(70, 205, 235));
    jComboBox1.setFont(new java.awt.Font("Malgun Gothic Semilight", 1, 18)); // NOI18N
    jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Eventid", "EventName", "Date" }));
    jComboBox1.setFocusable(false);
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jComboBox1ItemStateChanged(evt);
        }
    });
    jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jComboBox1MouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            jComboBox1MouseExited(evt);
        }
    });
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox1ActionPerformed(evt);
        }
    });
    add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 440, 120, 30));

    pic_event.setIcon(new javax.swing.ImageIcon("C:\\Users\\TestEnv\\Documents\\NetBeansProjects\\OrphanCharity\\OrphanCharity\\ALLPIC\\e1.jpeg")); // NOI18N
    pic_event.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            pic_eventMouseEntered(evt);
        }
    });
    add(pic_event, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 0, 500, -1));

    delete.setBackground(new java.awt.Color(70, 205, 235));
    delete.setFont(new java.awt.Font("Malgun Gothic Semilight", 1, 18)); // NOI18N
    delete.setForeground(new java.awt.Color(255, 255, 255));
    delete.setText("Delete");
    delete.setFocusable(false);
    delete.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            deleteMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            deleteMouseExited(evt);
        }
    });
    delete.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            deleteActionPerformed(evt);
        }
    });
    add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 350, 120, 60));

    ShowAll.setBackground(new java.awt.Color(70, 205, 235));
    ShowAll.setFont(new java.awt.Font("Malgun Gothic Semilight", 1, 18)); // NOI18N
    ShowAll.setForeground(new java.awt.Color(255, 255, 255));
    ShowAll.setText("Show all");
    ShowAll.setFocusable(false);
    ShowAll.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            ShowAllMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            ShowAllMouseExited(evt);
        }
    });
    ShowAll.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ShowAllActionPerformed(evt);
        }
    });
    add(ShowAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 350, 120, 60));

    searchtxt.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchtxtActionPerformed(evt);
        }
    });
    add(searchtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 410, 120, 30));

    search.setBackground(new java.awt.Color(70, 205, 235));
    search.setFont(new java.awt.Font("Malgun Gothic Semilight", 1, 18)); // NOI18N
    search.setForeground(new java.awt.Color(255, 255, 255));
    search.setText("Search");
    search.setFocusable(false);
    search.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            searchMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            searchMouseExited(evt);
        }
    });
    search.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchActionPerformed(evt);
        }
    });
    add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 410, 120, 60));

    show_vol.setBackground(new java.awt.Color(70, 205, 235));
    show_vol.setFont(new java.awt.Font("Malgun Gothic Semilight", 1, 18)); // NOI18N
    show_vol.setForeground(new java.awt.Color(255, 255, 255));
    show_vol.setText("Show Event Vlunteers");
    show_vol.setFocusable(false);
    show_vol.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            show_volActionPerformed(evt);
        }
    });
    add(show_vol, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 260, 220, 40));

    volunteertxt.setColumns(20);
    volunteertxt.setFont(new java.awt.Font("Malgun Gothic Semilight", 1, 18)); // NOI18N
    volunteertxt.setRows(5);
    jScrollPane2.setViewportView(volunteertxt);

    add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 460, 220));

    jLabel9.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
    jLabel9.setText("Choose Volunteers");
    add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 160, 30));

    jButton1.setBackground(new java.awt.Color(70, 205, 235));
    jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    jButton1.setForeground(new java.awt.Color(255, 255, 255));
    jButton1.setText("Add");
    jButton1.setFocusable(false);
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });
    add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, -1, -1));

    jList1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
    jScrollPane3.setViewportView(jList1);

    add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 210, 70));

    jLabel10.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
    jLabel10.setText("Date");
    add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 70, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
     
         // TODO add your handling code here:  
         try{
String ec=evcity.getText();
String es= street.getText();
String et= evtime.getText();
String evb= Bud.getText();
String ed=evdate.getText();
String en=evname.getText();
int B=Integer.valueOf(evb);
int time=Integer.valueOf(et);

         DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
     Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",  "C##Samaa_Yasin","654321");
     PreparedStatement stm= con.prepareStatement("insert into Event values (EVENT_S.nextval,'"+en+"',"+time+","+B+","+empssn+",'"+es+"','"+ec+"','"+ed+"')");
      stm.execute();
            }
      catch (Exception ex) {
         Logger.getLogger(eventpanel.class.getName()).log(Level.SEVERE, null, ex);
     }
        if(evcity.getText().equals("")||street.getText().equals("")||evtime.getText().equals("")||Bud.getText().equals("")||evdate.getText().equals("")||evname.getText().equals("")){
        JOptionPane.showMessageDialog(this,"Please Enter All Data !");
             
   }
         else{

            try{
         String ID=new String();
             DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
     Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",  "C##Samaa_Yasin","654321");
     PreparedStatement stm= con.prepareStatement(" select EVENT_ID from event");
     ResultSet rs=stm.executeQuery();
     while(rs.next()){
         int id=rs.getInt(1);
         ID=String.valueOf(id);
     }
String data[]={ ID,evname.getText(),evtime.getText(),Bud.getText(),Empssn,street.getText(),evcity.getText(),evdate.getText()};
             DefaultTableModel df =(DefaultTableModel)table.getModel();
             df.addRow(data);
             JOptionPane.showMessageDialog(this,"Added successfully ^_^ ");
                     evcity.setText("");
                     street.setText("");
                             evtime.setText("");
                             Bud.setText("");
                             evdate.setText("");
                                     evname.setText(""); 
                                     
            } catch (Exception ex) {
         Logger.getLogger(eventpanel.class.getName()).log(Level.SEVERE, null, ex);
     }
     
                    
         }                                       
       
  
    }//GEN-LAST:event_ADDActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
          try{
            
         DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
     Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",  "C##Samaa_Yasin","654321");
     String eid= eventidtxt.getText();
     int Eid;
     Eid=Integer.valueOf(eid);
      PreparedStatement stm= con.prepareStatement("DELETE from Event where Event_ID="+Eid);
      stm.execute();
                }
      catch (Exception ex) {
         Logger.getLogger(eventpanel.class.getName()).log(Level.SEVERE, null, ex);
     }
          DefaultTableModel df =(DefaultTableModel)table.getModel();
          
         if(table.getSelectedRowCount()==1){
             df.removeRow(table.getSelectedRow());
              JOptionPane.showMessageDialog(this,"Deleted successfully ^_^ ");
              eventidtxt.setText("");
                     evcity.setText("");
                     street.setText("");
                             evtime.setText("");
                             Bud.setText("");
                             evdate.setText("");
                                     evname.setText("");
                                     
                                     
                                     
         }
         else
         {
             if(table.getRowCount()==0){
             JOptionPane.showMessageDialog(this,"The table is empty -_- ");
             }
             else JOptionPane.showMessageDialog(this,"Please,select any row to delete *_* ");
                 
         }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
            String evo=eventidtxt.getText();

         try{
            
         DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
         String url="jdbc:oracle:thin:@location:1521:orcl";
     Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",  "C##Samaa_Yasin","654321");
   // String evo=eventidtxt.getText();
   
String ec=evcity.getText();
String es= street.getText();
String et= evtime.getText();
String evb= Bud.getText();
String ed=evdate.getText();
String en=evname.getText();
int id=Integer.valueOf(evo);
int B=Integer.valueOf(evb);
int time=Integer.valueOf(et);
      PreparedStatement stm= con.prepareStatement("UPDATE EVENT SET ENAME='"+en+"',EVENTTIME="+time+",BUDGET="+B+",STREET='"+es+"',Edate='"+ed+"',CITY='"+ec+"' where EVENT_ID="+id+"");
      stm.execute();
                }
      catch (Exception ex) {
         Logger.getLogger(eventpanel.class.getName()).log(Level.SEVERE, null, ex);
     }
        
        
         DefaultTableModel df =(DefaultTableModel)table.getModel();
         if(table.getSelectedRowCount()==1){
String ev=eventidtxt.getText();
String ec=evcity.getText();
String es= street.getText();
String et= evtime.getText();
String evb= Bud.getText();
String ed=evdate.getText();
String en=evname.getText();
if(!(ev.equals(evo))){
    JOptionPane.showMessageDialog(this,"You can't update the id");
}
else{
     //df.setValueAt(ev,table.getSelectedRow(),0);
          df.setValueAt(en,table.getSelectedRow(),1);

               df.setValueAt(et,table.getSelectedRow(),2);

                    df.setValueAt(evb,table.getSelectedRow(),3);

                              df.setValueAt(es,table.getSelectedRow(),5);

                                   df.setValueAt(ec,table.getSelectedRow(),6);
                                   
                                     df.setValueAt(ed,table.getSelectedRow(),7);
                                     
JOptionPane.showMessageDialog(this,"Updated successfully ^_^ ");
 eventidtxt.setText("");
                     evcity.setText("");
                     street.setText("");
                             evtime.setText("");
                             Bud.setText("");
                             evdate.setText("");
                                     evname.setText("");
         }
         }
         else{
              if(table.getRowCount()==0){
                  JOptionPane.showMessageDialog(this,"The Table is empty -_- ");

              }
              else{
                  JOptionPane.showMessageDialog(this,"Please,select any row to update *_*");

              }
         }

    }//GEN-LAST:event_updateActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
                  DefaultTableModel df =(DefaultTableModel)table.getModel();
String ev=df.getValueAt(table.getSelectedRow(),0).toString();
String en=df.getValueAt(table.getSelectedRow(),1).toString();
String et=df.getValueAt(table.getSelectedRow(),2).toString();
String evb=df.getValueAt(table.getSelectedRow(),3).toString();
String em=df.getValueAt(table.getSelectedRow(),4).toString();
String es=df.getValueAt(table.getSelectedRow(),5).toString();
String ec=df.getValueAt(table.getSelectedRow(),6).toString();
String ed=df.getValueAt(table.getSelectedRow(),7).toString();

      eventidtxt.setText(ev);
      evcity.setText(ec);
      street.setText(es);
      evtime.setText(et);
      Bud.setText(evb);
      evdate.setText(ed);
      evname.setText(en);
          try{
         DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
         Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",  "C##Samaa_Yasin","654321");
         PreparedStatement stm= con.prepareStatement("Select FName, LNAME, VSSN from visitors where Volunteerf=1");
          ResultSet rs=stm.executeQuery();
         
          while(rs.next()){
              s.add("VSSN= "+rs.getInt(3)+" ,"+rs.getString(1)+" "+rs.getString(2));
          }
          jList1.setListData(s);
     } catch (SQLException ex) {
         Logger.getLogger(eventpanel.class.getName()).log(Level.SEVERE, null, ex);
     }
     
    }//GEN-LAST:event_tableMouseClicked

    private void ShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAllActionPerformed
        try {
            // TODO add your handling code here:
            DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
                 Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",  "C##Samaa_Yasin","654321");
                 Statement stm =con.createStatement();
                 String st="select * from Event";
                   ResultSet rs=stm.executeQuery(st);
                   ResultSetMetaData rm=rs.getMetaData();
                 DefaultTableModel df =(DefaultTableModel)table.getModel();
                  int c=df.getColumnCount();
                  df.setRowCount(0);
                  while(rs.next()){ 
                      Vector v=new Vector();
                      for(int I=0;I<=c;I++){
                      v.add(rs.getString("EVent_ID"));
                      v.add(rs.getString("ENAME"));
                      v.add(rs.getString("EVENTTIME"));
                      v.add(rs.getString("BUDGET"));
                      v.add(rs.getString("MANEGER_SSN"));
                      v.add(rs.getString("street"));
                      v.add(rs.getString("city"));
                      v.add(rs.getString("EDate"));
  
                  }
                      df.addRow(v);
                  }
                 
        } catch (Exception ex) {
            Logger.getLogger(eventpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ShowAllActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:  
        
       
       
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
         try{
        DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
                 Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",  "C##Samaa_Yasin","654321");
                 Statement stm =con.createStatement();                
                     
                      if(jComboBox1.getSelectedIndex()==0){
                          String ev=searchtxt.getText();
                  int id=Integer.valueOf(ev);
                           String st="select * from Event where event_id="+id;          
                   ResultSet rs=stm.executeQuery(st);
                    ResultSetMetaData rm=rs.getMetaData();   
                    DefaultTableModel df =(DefaultTableModel)table.getModel();
                  int c=df.getColumnCount();
                  df.setRowCount(0);
                  while(rs.next()){ 
                      Vector v=new Vector();
                      for(int I=0;I<=c;I++){
                      v.add(rs.getString("EVent_ID"));
                      v.add(rs.getString("ENAME"));
                      v.add(rs.getString("EVENTTIME"));
                      v.add(rs.getString("BUDGET"));
                      v.add(rs.getString("MANEGER_SSN"));
                      v.add(rs.getString("street"));
                      v.add(rs.getString("city"));
                      v.add(rs.getString("EDate"));
                  }
                      df.addRow(v);
                  }
                  
                      }
                     else if(jComboBox1.getSelectedIndex()==1){
                           String name=searchtxt.getText();
                           String st="select * from Event where ENAME= '"+name+"'";
                   ResultSet rs=stm.executeQuery(st);   
                    ResultSetMetaData rm=rs.getMetaData();   
                    DefaultTableModel df =(DefaultTableModel)table.getModel();
                  int c=df.getColumnCount();
                  df.setRowCount(0);
                  while(rs.next()){ 
                      Vector v=new Vector();
                      for(int I=0;I<=c;I++){
                      v.add(rs.getString("EVent_ID"));
                      v.add(rs.getString("ENAME"));
                      v.add(rs.getString("EVENTTIME"));
                      v.add(rs.getString("BUDGET"));
                      v.add(rs.getString("MANEGER_SSN"));
                      v.add(rs.getString("street"));
                      v.add(rs.getString("city"));
                      v.add(rs.getString("EDate"));
                  }
                      df.addRow(v);
                  }
                      }
                     else if(jComboBox1.getSelectedIndex()==2){
                                           String date=searchtxt.getText();
                          String st="select * from Event where EDATE= '"+date+"'";
                   ResultSet rs=stm.executeQuery(st);  
                    ResultSetMetaData rm=rs.getMetaData();   
                    DefaultTableModel df =(DefaultTableModel)table.getModel();
                  int c=df.getColumnCount();
                  df.setRowCount(0);
                  while(rs.next()){ 
                      Vector v=new Vector();
                      for(int I=0;I<=c;I++){
                      v.add(rs.getString("EVent_ID"));
                      v.add(rs.getString("ENAME"));
                      v.add(rs.getString("EVENTTIME"));
                      v.add(rs.getString("BUDGET"));
                      v.add(rs.getString("MANEGER_SSN"));
                      v.add(rs.getString("street"));
                      v.add(rs.getString("city"));
                      v.add(rs.getString("EDate"));
                  }
                      df.addRow(v);
                  }
                      }          
        }
        catch (Exception ex) {
            Logger.getLogger(eventpanel.class.getName()).log(Level.SEVERE, null, ex);
        
    }                                          
    }//GEN-LAST:event_searchActionPerformed

    private void pic_eventMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pic_eventMouseEntered
        // TODO add your handling code here:
        class MyThread extends Thread{
    JLabel l=new JLabel();
    int speed;
public MyThread(JLabel t, int y)
{
l=t;
speed=y;
}
public void run()
{
while(true)
{
try {
    Thread.sleep( speed );
                        l.setIcon(new javax.swing.ImageIcon("C:\\Users\\TestEnv\\Documents\\NetBeansProjects\\OrphanCharity\\OrphanCharity\\ALLPIC\\e1.jpeg"));
                        Thread.sleep( speed );
                        l.setIcon(new javax.swing.ImageIcon("C:\\Users\\TestEnv\\Documents\\NetBeansProjects\\OrphanCharity\\OrphanCharity\\ALLPIC\\e2.jpeg"));
                        Thread.sleep( speed );
                        l.setIcon(new javax.swing.ImageIcon("C:\\Users\\TestEnv\\Documents\\NetBeansProjects\\OrphanCharity\\OrphanCharity\\ALLPIC\\e3.jpeg"));
                        Thread.sleep( speed );
                        l.setIcon(new javax.swing.ImageIcon("C:\\Users\\TestEnv\\Documents\\NetBeansProjects\\OrphanCharity\\OrphanCharity\\ALLPIC\\e4.jpeg"));
                        Thread.sleep( speed );
                        

                          

}
catch ( InterruptedException interruptedException ) {
System.err.println( interruptedException.toString());
}
}
}
}
MyThread M=new MyThread(pic_event,1600);
        M.start();

   
    
       
    }//GEN-LAST:event_pic_eventMouseEntered

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        // TODO add your handling code here:
        delete.setBackground(Color.blue);
        delete.setForeground(Color.white);
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        // TODO add your handling code here:
        Color c=new Color(70,205,235);
         delete.setBackground(c);
    }//GEN-LAST:event_deleteMouseExited

    private void searchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchtxtActionPerformed

    private void ADDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDMouseEntered
        // TODO add your handling code here:
         ADD.setBackground(Color.blue);
        ADD.setForeground(Color.white);
    }//GEN-LAST:event_ADDMouseEntered

    private void ADDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDMouseExited
        // TODO add your handling code here:
        Color c=new Color(70,205,235);
         ADD.setBackground(c);
    }//GEN-LAST:event_ADDMouseExited

    private void ShowAllMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowAllMouseEntered
        // TODO add your handling code here:
         ShowAll.setBackground(Color.blue);
        ShowAll.setForeground(Color.white);
    }//GEN-LAST:event_ShowAllMouseEntered

    private void ShowAllMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowAllMouseExited
        // TODO add your handling code here:
        Color c=new Color(70,205,235);
         ShowAll.setBackground(c);
    }//GEN-LAST:event_ShowAllMouseExited

    private void updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseEntered
        // TODO add your handling code here:
         update.setBackground(Color.blue);
        update.setForeground(Color.white);
    }//GEN-LAST:event_updateMouseEntered

    private void updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseExited
        // TODO add your handling code here:
        Color c=new Color(70,205,235);
         update.setBackground(c);
    }//GEN-LAST:event_updateMouseExited

    private void searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseEntered
        // TODO add your handling code here:
         search.setBackground(Color.blue);
        search.setForeground(Color.white);
    }//GEN-LAST:event_searchMouseEntered

    private void searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseExited
        // TODO add your handling code here:
        Color c=new Color(70,205,235);
         search.setBackground(c);
    }//GEN-LAST:event_searchMouseExited

    private void jComboBox1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseEntered
        // TODO add your handling code here:
         jComboBox1.setBackground(Color.blue);
        jComboBox1.setForeground(Color.white);
    }//GEN-LAST:event_jComboBox1MouseEntered

    private void jComboBox1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseExited
        // TODO add your handling code here:
        Color c=new Color(70,205,235);
         jComboBox1.setBackground(c);
    }//GEN-LAST:event_jComboBox1MouseExited

    private void show_volActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_volActionPerformed
        // TODO add your handling code here:  
         try{
             String s=new String();
         DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
        Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",  "C##Samaa_Yasin","654321");   
 s=eventidtxt.getText();
      int ei=Integer.valueOf(s);
      //System.out.print(ei);
      int c=0;
       PreparedStatement stm= con.prepareStatement("select FNAME,MNAME,LNAME from VISITORS where Vssn in(select volssn from volunteers where EVENTID="+ei+")");
       ResultSet rs=stm.executeQuery();
        String fname =new String();
          String mname =new String();
             String lname =new String();
             volunteertxt.setText("\t<<< Our Volunteer >>>\n______________________________________________________\n\n");
       while(rs.next()){
          fname=rs.getString(1);
          mname=rs.getString(2);
          lname=rs.getString(3);
      
 volunteertxt.append(fname+" "+lname+"\n");
       }
        } catch (Exception ex) {
            Logger.getLogger(donationpanel.class.getName()).log(Level.SEVERE, null, ex);     
    }                   
    }//GEN-LAST:event_show_volActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List<String> s =jList1.getSelectedValuesList();
       Iterator r= s.iterator();
       while(r.hasNext()){
       
     String id= (String) r.next();
     String [] s1=id.split(" ");
     try{
            DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
     Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE",  "C##Samaa_Yasin","654321");
     PreparedStatement stm= con.prepareStatement("insert into Volunteers values ("+s1[1]+","+eventidtxt.getText()+")");
      stm.execute();
            }
      catch (Exception ex) {
         Logger.getLogger(eventpanel.class.getName()).log(Level.SEVERE, null, ex);
     }
        if(evcity.getText().equals("")||street.getText().equals("")||evtime.getText().equals("")||Bud.getText().equals("")||evdate.getText().equals("")||evname.getText().equals("")){
        JOptionPane.showMessageDialog(this,"Please Enter All Data !");
             
   }
       }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    
    
    
    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JTextField Bud;
    private javax.swing.JButton ShowAll;
    private javax.swing.JButton delete;
    private javax.swing.JTextField evcity;
    private datechooser.beans.DateChooserCombo evdate;
    private javax.swing.JTextField eventidtxt;
    private javax.swing.JTextField evname;
    private javax.swing.JTextField evtime;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel pic_event;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JButton show_vol;
    private javax.swing.JTextField street;
    private javax.swing.JTable table;
    private javax.swing.JButton update;
    private javax.swing.JTextArea volunteertxt;
    // End of variables declaration//GEN-END:variables
}
